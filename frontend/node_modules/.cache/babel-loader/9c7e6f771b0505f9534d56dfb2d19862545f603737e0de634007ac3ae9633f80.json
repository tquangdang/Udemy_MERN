{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quang\\\\Desktop\\\\Udemy_MERN\\\\frontend\\\\src\\\\user\\\\pages\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    if (isLoginMode) {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/users/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/JSON\"\n          },\n          body: JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoading(false);\n        setError(err.message || \"Something went wrong, please try again.\");\n      }\n    } else {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/users/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/JSON\"\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || \"Something went wrong, please try again.\");\n      }\n    }\n    setIsLoading(false);\n  };\n  const errorHandler = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Your Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a name\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          label: \"E-Mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email address.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(5)],\n          errorText: \"Please enter a valid password, at least 5 characters.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? \"LOGIN\" : \"SIGNUP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"M6qFJ4XbXNhSRa0BG5N0Z2X5CtQ=\", false, function () {\n  return [useForm];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","jsxDEV","_jsxDEV","Auth","_s","auth","isLoginMode","setIsLoginMode","isLoading","setIsLoading","error","setError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","message","login","err","console","log","errorHandler","Fragment","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","asOverlay","onSubmit","element","id","type","label","validators","errorText","onInput","disabled","inverse","onClick","_c","$RefreshReg$"],"sources":["C:/Users/quang/Desktop/Udemy_MERN/frontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/JSON\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        auth.login();\r\n      } catch (err) {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n        setError(err.message || \"Something went wrong, please try again.\");\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/JSON\",\r\n          },\r\n          body: JSON.stringify({\r\n            name: formState.inputs.name.value,\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        auth.login();\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.message || \"Something went wrong, please try again.\");\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid password, at least 5 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}