{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom/cjs/react-router-dom.min\";import PlaceList from\"../components/PlaceList\";import ErrorModal from\"../../shared/components/UIElements/ErrorModal\";import LoadingSpinner from\"../../shared/components/UIElements/LoadingSpinner\";import{useHttpClient}from\"../../shared/hooks/http-hook\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UserPlaces=()=>{const[loadedPlaces,setLoadedPlaces]=useState();// useParams is used to access the parameters of the current route that the component is rendered on.\n// For example, if the route is /users/:userId/places and you navigate to /users/123/places,\n// useParams will return an object with a property userId that equals '123'\nconst{isLoading,error,sendRequest,clearError}=useHttpClient();const userId=useParams().userId;useEffect(()=>{const fetchPlaces=async()=>{try{const responseData=await sendRequest(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/places/user/\").concat(userId));setLoadedPlaces(responseData.places);}catch(err){}};fetchPlaces();},[sendRequest,userId]);const placeDeletedHandler=deletedPlaceId=>{setLoadedPlaces(prevPlaces=>prevPlaces.filter(place=>place.id!==deletedPlaceId));};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ErrorModal,{error:error,onClear:clearError}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"center\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),!isLoading&&loadedPlaces&&/*#__PURE__*/_jsx(PlaceList,{items:loadedPlaces,onDeletePlace:placeDeletedHandler})]});};export default UserPlaces;","map":{"version":3,"names":["React","useEffect","useState","useParams","PlaceList","ErrorModal","LoadingSpinner","useHttpClient","jsx","_jsx","jsxs","_jsxs","UserPlaces","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","concat","process","env","REACT_APP_BACKEND_URL","places","err","placeDeletedHandler","deletedPlaceId","prevPlaces","filter","place","id","Fragment","children","onClear","className","items","onDeletePlace"],"sources":["C:/Users/quang/Desktop/Udemy_MERN/frontend/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  // useParams is used to access the parameters of the current route that the component is rendered on.\r\n  // For example, if the route is /users/:userId/places and you navigate to /users/123/places,\r\n  // useParams will return an object with a property userId that equals '123'\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,2CAA2C,CAErE,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,UAAU,KAAM,+CAA+C,CACtE,MAAO,CAAAC,cAAc,KAAM,mDAAmD,CAC9E,OAASC,aAAa,KAAQ,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7D,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAC,CAAC,CAClD;AACA;AACA;AACA,KAAM,CAAEa,SAAS,CAAEC,KAAK,CAAEC,WAAW,CAAEC,UAAW,CAAC,CAAGX,aAAa,CAAC,CAAC,CAErE,KAAM,CAAAY,MAAM,CAAGhB,SAAS,CAAC,CAAC,CAACgB,MAAM,CACjClB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmB,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAJ,WAAW,IAAAK,MAAA,CACjCC,OAAO,CAACC,GAAG,CAACC,qBAAqB,kBAAAH,MAAA,CAAgBH,MAAM,CAC5D,CAAC,CACDL,eAAe,CAACO,YAAY,CAACK,MAAM,CAAC,CACtC,CAAE,MAAOC,GAAG,CAAE,CAAC,CACjB,CAAC,CACDP,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAACH,WAAW,CAAEE,MAAM,CAAC,CAAC,CAEzB,KAAM,CAAAS,mBAAmB,CAAIC,cAAc,EAAK,CAC9Cf,eAAe,CAAEgB,UAAU,EACzBA,UAAU,CAACC,MAAM,CAAEC,KAAK,EAAKA,KAAK,CAACC,EAAE,GAAKJ,cAAc,CAC1D,CAAC,CACH,CAAC,CAED,mBACElB,KAAA,CAACX,KAAK,CAACkC,QAAQ,EAAAC,QAAA,eACb1B,IAAA,CAACJ,UAAU,EAACW,KAAK,CAAEA,KAAM,CAACoB,OAAO,CAAElB,UAAW,CAAE,CAAC,CAChDH,SAAS,eACRN,IAAA,QAAK4B,SAAS,CAAC,QAAQ,CAAAF,QAAA,cACrB1B,IAAA,CAACH,cAAc,GAAE,CAAC,CACf,CACN,CACA,CAACS,SAAS,EAAIF,YAAY,eACzBJ,IAAA,CAACL,SAAS,EAACkC,KAAK,CAAEzB,YAAa,CAAC0B,aAAa,CAAEX,mBAAoB,CAAE,CACtE,EACa,CAAC,CAErB,CAAC,CAED,cAAe,CAAAhB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}