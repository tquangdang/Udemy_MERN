{"ast":null,"code":"import React,{useReducer,useEffect}from\"react\";import{validate}from\"../../util/validators\";import\"./Input.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const inputReducer=(state,action)=>{switch(action.type){case\"CHANGE\":return{...state,value:action.val,isValid:validate(action.val,action.validators)};case\"TOUCH\":return{...state,isTouched:true};default:return state;}};const Input=props=>{const[inputState,dispatch]=useReducer(inputReducer,{value:props.initialValue||\"\",isTouched:false,isValid:props.initialValid||false});const{id,onInput}=props;const{value,isValid}=inputState;useEffect(()=>{onInput(props.id,value,isValid);},[id,value,isValid,onInput]);const changeHandler=event=>{dispatch({type:\"CHANGE\",val:event.target.value,validators:props.validators});};const touchHandler=()=>{dispatch({type:\"TOUCH\"});};// The component decides which element to render (an <input> or a <textarea>) based on the props.element value.\n// If props.element is equal to \"input\", it renders an <input> element; otherwise, it renders a <textarea> element.\nconst element=props.element===\"input\"?/*#__PURE__*/_jsx(\"input\",{id:props.id,type:props.type,placeholder:props.placeholder,onChange:changeHandler,onBlur:touchHandler,value:inputState.value}):/*#__PURE__*/_jsx(\"textarea\",{id:props.id,rows:props.rows||3,onChange:changeHandler,onBlur:touchHandler,value:inputState.value});return/*#__PURE__*/_jsxs(\"div\",{className:\"form-control \".concat(!inputState.isValid&&inputState.isTouched&&\"form-control--invalid\"),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:props.id,children:props.label}),element,!inputState.isValid&&inputState.isTouched&&/*#__PURE__*/_jsx(\"p\",{children:props.errorText})]});};export default Input;","map":{"version":3,"names":["React","useReducer","useEffect","validate","jsx","_jsx","jsxs","_jsxs","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","concat","children","htmlFor","label","errorText"],"sources":["C:/Users/quang/Desktop/Udemy_MERN/frontend/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\n\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const {id, onInput} = props;\r\n  const {value, isValid} = inputState\r\n\r\n  useEffect(() => {\r\n    onInput(props.id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  // The component decides which element to render (an <input> or a <textarea>) based on the props.element value.\r\n  // If props.element is equal to \"input\", it renders an <input> element; otherwise, it renders a <textarea> element.\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}