{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quang\\\\Desktop\\\\Udemy_MERN\\\\frontend\\\\src\\\\places\\\\pages\\\\UserPlaces.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPlaces = () => {\n  _s();\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  // useParams is used to access the parameters of the current route that the component is rendered on.\n  // For example, if the route is /users/:userId/places and you navigate to /users/123/places,\n  // useParams will return an object with a property userId that equals '123'\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/user/${userId}`);\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces;\n  }, [sendRequest, userId]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), !isLoading && loadedPlaces && /*#__PURE__*/_jsxDEV(PlaceList, {\n      items: loadedPlaces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPlaces, \"Jjx8x1DuBEzTmxOEV/N+WrTeEac=\", false, function () {\n  return [useHttpClient, useParams];\n});\n_c = UserPlaces;\nexport default UserPlaces;\nvar _c;\n$RefreshReg$(_c, \"UserPlaces\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PlaceList","ErrorModal","LoadingSpinner","useHttpClient","jsxDEV","_jsxDEV","UserPlaces","_s","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","places","err","Fragment","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","items","_c","$RefreshReg$"],"sources":["C:/Users/quang/Desktop/Udemy_MERN/frontend/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  // useParams is used to access the parameters of the current route that the component is rendered on.\r\n  // For example, if the route is /users/:userId/places and you navigate to /users/123/places,\r\n  // useParams will return an object with a property userId that equals '123'\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces;\r\n  }, [sendRequest, userId]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,2CAA2C;AAErE,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,+CAA+C;AACtE,OAAOC,cAAc,MAAM,mDAAmD;AAC9E,SAASC,aAAa,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAClD;EACA;EACA;EACA,MAAM;IAAEY,SAAS;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGV,aAAa,CAAC,CAAC;EAErE,MAAMW,MAAM,GAAGf,SAAS,CAAC,CAAC,CAACe,MAAM;EACjCjB,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMJ,WAAW,CACnC,yCAAwCE,MAAO,EAClD,CAAC;QACDL,eAAe,CAACO,YAAY,CAACC,MAAM,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;IACjB,CAAC;IACDH,WAAW;EACb,CAAC,EAAE,CAACH,WAAW,EAAEE,MAAM,CAAC,CAAC;EAEzB,oBACET,OAAA,CAACT,KAAK,CAACuB,QAAQ;IAAAC,QAAA,gBACbf,OAAA,CAACJ,UAAU;MAACU,KAAK,EAAEA,KAAM;MAACU,OAAO,EAAER;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDf,SAAS,iBACRL,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAN,QAAA,eACrBf,OAAA,CAACH,cAAc;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CACN,EACA,CAACf,SAAS,IAAIF,YAAY,iBAAIH,OAAA,CAACL,SAAS;MAAC2B,KAAK,EAAEnB;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAErB,CAAC;AAAClB,EAAA,CA/BID,UAAU;EAAA,QAKwCH,aAAa,EAEpDJ,SAAS;AAAA;AAAA6B,EAAA,GAPpBtB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}